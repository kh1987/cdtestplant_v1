# Generated by Django 4.2.3 on 2023-08-03 08:16

from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    dependencies = [
        ('project', '0008_case_casestep'),
    ]

    operations = [
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(help_text='Id', primary_key=True, serialize=False, verbose_name='Id')),
                ('remark', models.CharField(blank=True, help_text='描述', max_length=255, null=True, verbose_name='描述')),
                ('update_datetime', models.DateField(auto_now=True, help_text='修改时间', null=True, verbose_name='修改时间')),
                ('create_datetime', models.DateField(auto_now_add=True, help_text='创建时间', null=True, verbose_name='创建时间')),
                ('sort', models.IntegerField(blank=True, default=1, help_text='显示排序', null=True, verbose_name='显示排序')),
                ('ident', models.CharField(blank=True, help_text='问题单标识', max_length=64, null=True, verbose_name='问题单标识')),
                ('name', models.CharField(blank=True, help_text='问题单名称', max_length=64, null=True, verbose_name='问题单名称')),
                ('status', models.CharField(blank=True, help_text='缺陷状态', max_length=8, null=True, verbose_name='缺陷状态')),
                ('grade', models.CharField(blank=True, help_text='缺陷等级', max_length=8, null=True, verbose_name='缺陷等级')),
                ('type', models.CharField(blank=True, help_text='缺陷类型', max_length=8, null=True, verbose_name='缺陷类型')),
                ('closeMethod', models.JSONField(blank=True, default=['1'], help_text='闭环方式', null=True, verbose_name='闭环方式')),
                ('operation', tinymce.models.HTMLField(blank=True, help_text='问题出现操作', null=True, verbose_name='问题出现操作')),
                ('expect', models.CharField(blank=True, help_text='期望', max_length=1024, null=True, verbose_name='期望')),
                ('result', tinymce.models.HTMLField(blank=True, help_text='问题结果', null=True, verbose_name='问题结果')),
                ('rules', models.CharField(blank=True, help_text='违反规则', max_length=512, null=True, verbose_name='违反规则')),
                ('suggest', models.CharField(blank=True, help_text='修改建议', max_length=512, null=True, verbose_name='修改建议')),
                ('postPerson', models.CharField(blank=True, help_text='提出人员', max_length=16, null=True, verbose_name='提出人员')),
                ('postDate', models.DateField(auto_now_add=True, help_text='提单日期', null=True, verbose_name='提单日期')),
                ('designerPerson', models.CharField(blank=True, help_text='开发人员上级确认人', max_length=16, null=True, verbose_name='开发人员上级确认人')),
                ('designDate', models.DateField(auto_now_add=True, help_text='确认日期', null=True, verbose_name='确认日期')),
                ('verifyPerson', models.CharField(blank=True, help_text='验证人员', max_length=16, null=True, verbose_name='验证人员')),
                ('verifyDate', models.DateField(auto_now_add=True, help_text='验证日期', null=True, verbose_name='验证日期')),
                ('revokePerson', models.CharField(blank=True, help_text='撤销人员', max_length=16, null=True, verbose_name='撤销人员')),
                ('revokeDate', models.DateField(auto_now_add=True, help_text='撤销日期', null=True, verbose_name='撤销日期')),
                ('isLeaf', models.BooleanField(default=True, help_text='树状图最后一个节点', verbose_name='树状图最后一个节点')),
                ('title', models.CharField(blank=True, help_text='树-名称', max_length=64, null=True, verbose_name='树-名称')),
                ('key', models.CharField(blank=True, help_text='round-dut-designkey-testdemand-case-problem', max_length=16, null=True, verbose_name='round-dut-designkey-testdemand-case-problem')),
                ('level', models.CharField(blank=True, default=5, help_text='树-level', max_length=16, null=True, verbose_name='树-level')),
                ('case', models.ForeignKey(db_constraint=False, help_text='归属测试用例', on_delete=django.db.models.deletion.CASCADE, related_name='caseField', related_query_name='caseQuery', to='project.case', verbose_name='归属测试用例')),
                ('design', models.ForeignKey(db_constraint=False, help_text='归属设计需求', on_delete=django.db.models.deletion.CASCADE, related_name='designField', related_query_name='designQuery', to='project.design', verbose_name='归属设计需求')),
                ('dut', models.ForeignKey(db_constraint=False, help_text='归属被测件', on_delete=django.db.models.deletion.CASCADE, related_name='dutcField', related_query_name='dutcQuery', to='project.dut', verbose_name='归属被测件')),
                ('project', models.ForeignKey(db_constraint=False, help_text='归属项目', on_delete=django.db.models.deletion.CASCADE, related_name='projField', related_query_name='projQuery', to='project.project', verbose_name='归属项目')),
                ('round', models.ForeignKey(db_constraint=False, help_text='归属轮次', on_delete=django.db.models.deletion.CASCADE, related_name='roundField', related_query_name='roundQuery', to='project.round', verbose_name='归属轮次')),
                ('test', models.ForeignKey(db_constraint=False, help_text='归属测试需求', on_delete=django.db.models.deletion.CASCADE, related_name='testField', related_query_name='testQuery', to='project.testdemand', verbose_name='归属测试需求')),
            ],
            options={
                'verbose_name': '问题单',
                'verbose_name_plural': '问题单',
                'db_table': 'project_problem',
                'ordering': ('key',),
            },
        ),
    ]
